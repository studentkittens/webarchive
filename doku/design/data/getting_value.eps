%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 139 575 652
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, May 19, 2012 11:29:47 AM CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
1147 1057 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1147.00 0.00000 l
1147.00 1057.00 l
0.00000 1057.00 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 1147 1057 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 374.000 310.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-374.000 -310.000 m
773.000 -310.000 l
773.000 747.000 l
-374.000 747.000 l
-374.000 -310.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 374.000 310.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 374.000 310.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 374.000 310.000 ] defaultmatrix matrix concatmatrix setmatrix
q
0 J
1.45000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [244.60000610351562 200.1999969482422 324.6000061035156 240.1999969482422]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9098039 0.93333334 0.96862745]
         /C1 [0.7176471 0.7882353 0.8901961]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
254.800 200.200 m
324.600 200.200 l
314.400 240.200 l
244.600 240.200 l
h
f
0.00000 0.00000 0.00000 RG
newpath
254.800 200.200 m
324.600 200.200 l
314.400 240.200 l
244.600 240.200 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
259.125 218.031 m
259.125 219.047 l
258.812 218.870 258.505 218.740 258.203 218.656  c
257.901 218.573 257.594 218.531 257.281 218.531  c
256.573 218.531 256.026 218.753 255.641 219.195  c
255.255 219.638 255.062 220.260 255.062 221.062  c
255.062 221.865 255.255 222.487 255.641 222.930  c
256.026 223.372 256.573 223.594 257.281 223.594  c
257.594 223.594 257.901 223.552 258.203 223.469  c
258.505 223.385 258.812 223.260 259.125 223.094  c
259.125 224.094 l
258.823 224.229 258.510 224.333 258.188 224.406  c
257.865 224.479 257.521 224.516 257.156 224.516  c
256.167 224.516 255.380 224.206 254.797 223.586  c
254.214 222.966 253.922 222.125 253.922 221.062  c
253.922 220.000 254.216 219.161 254.805 218.547  c
255.393 217.932 256.203 217.625 257.234 217.625  c
257.557 217.625 257.878 217.659 258.195 217.727  c
258.513 217.794 258.823 217.896 259.125 218.031  c
h
263.531 218.531 m
262.958 218.531 262.503 218.758 262.164 219.211  c
261.826 219.664 261.656 220.281 261.656 221.062  c
261.656 221.854 261.823 222.474 262.156 222.922  c
262.490 223.370 262.948 223.594 263.531 223.594  c
264.104 223.594 264.560 223.367 264.898 222.914  c
265.237 222.461 265.406 221.844 265.406 221.062  c
265.406 220.292 265.237 219.677 264.898 219.219  c
264.560 218.760 264.104 218.531 263.531 218.531  c
h
263.531 217.625 m
264.469 217.625 265.206 217.930 265.742 218.539  c
266.279 219.148 266.547 219.990 266.547 221.062  c
266.547 222.135 266.279 222.979 265.742 223.594  c
265.206 224.208 264.469 224.516 263.531 224.516  c
262.594 224.516 261.857 224.208 261.320 223.594  c
260.784 222.979 260.516 222.135 260.516 221.062  c
260.516 219.990 260.784 219.148 261.320 218.539  c
261.857 217.930 262.594 217.625 263.531 217.625  c
h
273.797 220.375 m
273.797 224.344 l
272.719 224.344 l
272.719 220.422 l
272.719 219.797 272.596 219.331 272.352 219.023  c
272.107 218.716 271.745 218.562 271.266 218.562  c
270.682 218.562 270.221 218.747 269.883 219.117  c
269.544 219.487 269.375 219.995 269.375 220.641  c
269.375 224.344 l
268.297 224.344 l
268.297 217.781 l
269.375 217.781 l
269.375 218.797 l
269.635 218.401 269.940 218.107 270.289 217.914  c
270.638 217.721 271.042 217.625 271.500 217.625  c
272.250 217.625 272.820 217.857 273.211 218.320  c
273.602 218.784 273.797 219.469 273.797 220.375  c
h
279.266 215.219 m
279.266 216.125 l
278.234 216.125 l
277.849 216.125 277.581 216.203 277.430 216.359  c
277.279 216.516 277.203 216.797 277.203 217.203  c
277.203 217.781 l
278.984 217.781 l
278.984 218.625 l
277.203 218.625 l
277.203 224.344 l
276.125 224.344 l
276.125 218.625 l
275.094 218.625 l
275.094 217.781 l
276.125 217.781 l
276.125 217.328 l
276.125 216.599 276.294 216.065 276.633 215.727  c
276.971 215.388 277.510 215.219 278.250 215.219  c
279.266 215.219 l
h
280.156 217.781 m
281.234 217.781 l
281.234 224.344 l
280.156 224.344 l
280.156 217.781 l
h
280.156 215.219 m
281.234 215.219 l
281.234 216.594 l
280.156 216.594 l
280.156 215.219 l
h
287.812 220.984 m
287.812 220.203 287.651 219.599 287.328 219.172  c
287.005 218.745 286.552 218.531 285.969 218.531  c
285.396 218.531 284.948 218.745 284.625 219.172  c
284.302 219.599 284.141 220.203 284.141 220.984  c
284.141 221.766 284.302 222.370 284.625 222.797  c
284.948 223.224 285.396 223.438 285.969 223.438  c
286.552 223.438 287.005 223.224 287.328 222.797  c
287.651 222.370 287.812 221.766 287.812 220.984  c
h
288.891 223.531 m
288.891 224.646 288.643 225.477 288.148 226.023  c
287.654 226.570 286.891 226.844 285.859 226.844  c
285.484 226.844 285.128 226.815 284.789 226.758  c
284.451 226.701 284.125 226.615 283.812 226.500  c
283.812 225.453 l
284.125 225.620 284.438 225.745 284.750 225.828  c
285.062 225.911 285.375 225.953 285.688 225.953  c
286.396 225.953 286.927 225.768 287.281 225.398  c
287.635 225.029 287.812 224.469 287.812 223.719  c
287.812 223.188 l
287.583 223.573 287.297 223.862 286.953 224.055  c
286.609 224.247 286.193 224.344 285.703 224.344  c
284.901 224.344 284.253 224.036 283.758 223.422  c
283.263 222.807 283.016 221.995 283.016 220.984  c
283.016 219.974 283.263 219.161 283.758 218.547  c
284.253 217.932 284.901 217.625 285.703 217.625  c
286.193 217.625 286.609 217.721 286.953 217.914  c
287.297 218.107 287.583 218.396 287.812 218.781  c
287.812 217.781 l
288.891 217.781 l
288.891 223.531 l
h
291.266 222.859 m
292.500 222.859 l
292.500 224.344 l
291.266 224.344 l
291.266 222.859 l
h
300.391 217.781 m
298.016 220.969 l
300.500 224.344 l
299.234 224.344 l
297.328 221.766 l
295.422 224.344 l
294.141 224.344 l
296.688 220.906 l
294.359 217.781 l
295.625 217.781 l
297.375 220.125 l
299.109 217.781 l
300.391 217.781 l
h
307.141 219.047 m
307.411 218.557 307.734 218.198 308.109 217.969  c
308.484 217.740 308.927 217.625 309.438 217.625  c
310.125 217.625 310.654 217.865 311.023 218.344  c
311.393 218.823 311.578 219.500 311.578 220.375  c
311.578 224.344 l
310.500 224.344 l
310.500 220.422 l
310.500 219.786 310.388 219.318 310.164 219.016  c
309.940 218.714 309.599 218.562 309.141 218.562  c
308.578 218.562 308.135 218.747 307.812 219.117  c
307.490 219.487 307.328 219.995 307.328 220.641  c
307.328 224.344 l
306.250 224.344 l
306.250 220.422 l
306.250 219.786 306.138 219.318 305.914 219.016  c
305.690 218.714 305.344 218.562 304.875 218.562  c
304.323 218.562 303.885 218.747 303.562 219.117  c
303.240 219.487 303.078 219.995 303.078 220.641  c
303.078 224.344 l
302.000 224.344 l
302.000 217.781 l
303.078 217.781 l
303.078 218.797 l
303.328 218.401 303.625 218.107 303.969 217.914  c
304.312 217.721 304.719 217.625 305.188 217.625  c
305.667 217.625 306.073 217.745 306.406 217.984  c
306.740 218.224 306.984 218.578 307.141 219.047  c
h
313.719 215.219 m
314.797 215.219 l
314.797 224.344 l
313.719 224.344 l
313.719 215.219 l
h
f
2 J
10.0000 M
Q
q
0 J
1.45000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [90.19999694824219 114.80000305175781 170.1999969482422 154.8000030517578]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9098039 0.93333334 0.96862745]
         /C1 [0.7176471 0.7882353 0.8901961]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
150.200 134.800 m
150.200 145.846 141.246 154.800 130.200 154.800  c
119.154 154.800 110.200 145.846 110.200 134.800  c
110.200 123.754 119.154 114.800 130.200 114.800  c
141.246 114.800 150.200 123.754 150.200 134.800  c
h
f
0.00000 0.00000 0.00000 RG
newpath
150.200 134.800 m
150.200 145.846 141.246 154.800 130.200 154.800  c
119.154 154.800 110.200 145.846 110.200 134.800  c
110.200 123.754 119.154 114.800 130.200 114.800  c
141.246 114.800 150.200 123.754 150.200 134.800  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
130.203 131.375 m
128.594 135.719 l
131.812 135.719 l
130.203 131.375 l
h
129.531 130.203 m
130.875 130.203 l
134.203 138.953 l
132.969 138.953 l
132.172 136.703 l
128.234 136.703 l
127.438 138.953 l
126.188 138.953 l
129.531 130.203 l
h
f
2 J
10.0000 M
Q
q
0 J
1.45000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [74.19999694824219 203.8000030517578 186.1999969482422 240.20001220703125]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9098039 0.93333334 0.96862745]
         /C1 [0.7176471 0.7882353 0.8901961]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
74.2000 203.800 m
186.200 203.800 l
186.200 240.200 l
74.2000 240.200 l
h
f
0.00000 0.00000 0.00000 RG
newpath
74.2000 203.800 m
186.200 203.800 l
186.200 240.200 l
74.2000 240.200 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
103.188 220.594 m
103.062 220.531 102.930 220.482 102.789 220.445  c
102.648 220.409 102.490 220.391 102.312 220.391  c
101.708 220.391 101.242 220.589 100.914 220.984  c
100.586 221.380 100.422 221.953 100.422 222.703  c
100.422 226.156 l
99.3438 226.156 l
99.3438 219.594 l
100.422 219.594 l
100.422 220.609 l
100.651 220.214 100.948 219.919 101.312 219.727  c
101.677 219.534 102.120 219.438 102.641 219.438  c
102.714 219.438 102.794 219.443 102.883 219.453  c
102.971 219.464 103.068 219.479 103.172 219.500  c
103.188 220.594 l
h
109.938 222.609 m
109.938 223.125 l
104.969 223.125 l
105.021 223.875 105.247 224.443 105.648 224.828  c
106.049 225.214 106.604 225.406 107.312 225.406  c
107.729 225.406 108.133 225.357 108.523 225.258  c
108.914 225.159 109.302 225.005 109.688 224.797  c
109.688 225.828 l
109.292 225.984 108.891 226.107 108.484 226.195  c
108.078 226.284 107.667 226.328 107.250 226.328  c
106.208 226.328 105.380 226.023 104.766 225.414  c
104.151 224.805 103.844 223.979 103.844 222.938  c
103.844 221.865 104.135 221.013 104.719 220.383  c
105.302 219.753 106.083 219.438 107.062 219.438  c
107.948 219.438 108.648 219.721 109.164 220.289  c
109.680 220.857 109.938 221.630 109.938 222.609  c
h
108.859 222.281 m
108.849 221.698 108.682 221.229 108.359 220.875  c
108.036 220.521 107.609 220.344 107.078 220.344  c
106.474 220.344 105.992 220.516 105.633 220.859  c
105.273 221.203 105.068 221.682 105.016 222.297  c
108.859 222.281 l
h
114.672 222.859 m
113.807 222.859 113.206 222.958 112.867 223.156  c
112.529 223.354 112.359 223.693 112.359 224.172  c
112.359 224.557 112.487 224.862 112.742 225.086  c
112.997 225.310 113.339 225.422 113.766 225.422  c
114.370 225.422 114.852 225.211 115.211 224.789  c
115.570 224.367 115.750 223.802 115.750 223.094  c
115.750 222.859 l
114.672 222.859 l
h
116.828 222.406 m
116.828 226.156 l
115.750 226.156 l
115.750 225.156 l
115.500 225.552 115.193 225.846 114.828 226.039  c
114.464 226.232 114.016 226.328 113.484 226.328  c
112.807 226.328 112.271 226.138 111.875 225.758  c
111.479 225.378 111.281 224.875 111.281 224.250  c
111.281 223.510 111.529 222.953 112.023 222.578  c
112.518 222.203 113.255 222.016 114.234 222.016  c
115.750 222.016 l
115.750 221.906 l
115.750 221.406 115.586 221.021 115.258 220.750  c
114.930 220.479 114.474 220.344 113.891 220.344  c
113.516 220.344 113.148 220.391 112.789 220.484  c
112.430 220.578 112.089 220.714 111.766 220.891  c
111.766 219.891 l
112.161 219.734 112.544 219.620 112.914 219.547  c
113.284 219.474 113.646 219.438 114.000 219.438  c
114.948 219.438 115.656 219.682 116.125 220.172  c
116.594 220.661 116.828 221.406 116.828 222.406  c
h
123.375 220.594 m
123.375 217.031 l
124.453 217.031 l
124.453 226.156 l
123.375 226.156 l
123.375 225.172 l
123.146 225.557 122.859 225.846 122.516 226.039  c
122.172 226.232 121.755 226.328 121.266 226.328  c
120.474 226.328 119.828 226.010 119.328 225.375  c
118.828 224.740 118.578 223.906 118.578 222.875  c
118.578 221.844 118.828 221.013 119.328 220.383  c
119.828 219.753 120.474 219.438 121.266 219.438  c
121.755 219.438 122.172 219.531 122.516 219.719  c
122.859 219.906 123.146 220.198 123.375 220.594  c
h
119.703 222.875 m
119.703 223.667 119.865 224.289 120.188 224.742  c
120.510 225.195 120.958 225.422 121.531 225.422  c
122.104 225.422 122.555 225.195 122.883 224.742  c
123.211 224.289 123.375 223.667 123.375 222.875  c
123.375 222.083 123.211 221.464 122.883 221.016  c
122.555 220.568 122.104 220.344 121.531 220.344  c
120.958 220.344 120.510 220.568 120.188 221.016  c
119.865 221.464 119.703 222.083 119.703 222.875  c
h
129.719 219.594 m
130.859 219.594 l
132.906 225.094 l
134.969 219.594 l
136.109 219.594 l
133.641 226.156 l
132.172 226.156 l
129.719 219.594 l
h
140.562 222.859 m
139.698 222.859 139.096 222.958 138.758 223.156  c
138.419 223.354 138.250 223.693 138.250 224.172  c
138.250 224.557 138.378 224.862 138.633 225.086  c
138.888 225.310 139.229 225.422 139.656 225.422  c
140.260 225.422 140.742 225.211 141.102 224.789  c
141.461 224.367 141.641 223.802 141.641 223.094  c
141.641 222.859 l
140.562 222.859 l
h
142.719 222.406 m
142.719 226.156 l
141.641 226.156 l
141.641 225.156 l
141.391 225.552 141.083 225.846 140.719 226.039  c
140.354 226.232 139.906 226.328 139.375 226.328  c
138.698 226.328 138.161 226.138 137.766 225.758  c
137.370 225.378 137.172 224.875 137.172 224.250  c
137.172 223.510 137.419 222.953 137.914 222.578  c
138.409 222.203 139.146 222.016 140.125 222.016  c
141.641 222.016 l
141.641 221.906 l
141.641 221.406 141.477 221.021 141.148 220.750  c
140.820 220.479 140.365 220.344 139.781 220.344  c
139.406 220.344 139.039 220.391 138.680 220.484  c
138.320 220.578 137.979 220.714 137.656 220.891  c
137.656 219.891 l
138.052 219.734 138.435 219.620 138.805 219.547  c
139.174 219.474 139.536 219.438 139.891 219.438  c
140.839 219.438 141.547 219.682 142.016 220.172  c
142.484 220.661 142.719 221.406 142.719 222.406  c
h
144.938 217.031 m
146.016 217.031 l
146.016 226.156 l
144.938 226.156 l
144.938 217.031 l
h
148.156 223.562 m
148.156 219.594 l
149.234 219.594 l
149.234 223.531 l
149.234 224.146 149.357 224.609 149.602 224.922  c
149.846 225.234 150.208 225.391 150.688 225.391  c
151.271 225.391 151.732 225.206 152.070 224.836  c
152.409 224.466 152.578 223.958 152.578 223.312  c
152.578 219.594 l
153.656 219.594 l
153.656 226.156 l
152.578 226.156 l
152.578 225.141 l
152.318 225.547 152.016 225.846 151.672 226.039  c
151.328 226.232 150.927 226.328 150.469 226.328  c
149.708 226.328 149.133 226.094 148.742 225.625  c
148.352 225.156 148.156 224.469 148.156 223.562  c
h
150.875 219.438 m
150.875 219.438 l
h
161.500 222.609 m
161.500 223.125 l
156.531 223.125 l
156.583 223.875 156.810 224.443 157.211 224.828  c
157.612 225.214 158.167 225.406 158.875 225.406  c
159.292 225.406 159.695 225.357 160.086 225.258  c
160.477 225.159 160.865 225.005 161.250 224.797  c
161.250 225.828 l
160.854 225.984 160.453 226.107 160.047 226.195  c
159.641 226.284 159.229 226.328 158.812 226.328  c
157.771 226.328 156.943 226.023 156.328 225.414  c
155.714 224.805 155.406 223.979 155.406 222.938  c
155.406 221.865 155.698 221.013 156.281 220.383  c
156.865 219.753 157.646 219.438 158.625 219.438  c
159.510 219.438 160.211 219.721 160.727 220.289  c
161.242 220.857 161.500 221.630 161.500 222.609  c
h
160.422 222.281 m
160.411 221.698 160.245 221.229 159.922 220.875  c
159.599 220.521 159.172 220.344 158.641 220.344  c
158.036 220.344 157.555 220.516 157.195 220.859  c
156.836 221.203 156.630 221.682 156.578 222.297  c
160.422 222.281 l
h
f
2 J
10.0000 M
Q
q
0 J
1.45000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [90.19999694824219 347.70001220703125 170.1999969482422 387.70001220703125]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9098039 0.93333334 0.96862745]
         /C1 [0.7176471 0.7882353 0.8901961]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
90.2000 367.700 m
90.2000 367.700 l
90.2000 378.746 99.1543 387.700 110.200 387.700  c
150.200 387.700 l
161.246 387.700 170.200 378.746 170.200 367.700  c
170.200 367.700 l
170.200 356.654 161.246 347.700 150.200 347.700  c
110.200 347.700 l
99.1543 347.700 90.2000 356.654 90.2000 367.700  c
h
f
0.00000 0.00000 0.00000 RG
newpath
90.2000 367.700 m
90.2000 367.700 l
90.2000 378.746 99.1543 387.700 110.200 387.700  c
150.200 387.700 l
161.246 387.700 170.200 378.746 170.200 367.700  c
170.200 367.700 l
170.200 356.654 161.246 347.700 150.200 347.700  c
110.200 347.700 l
99.1543 347.700 90.2000 356.654 90.2000 367.700  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
125.641 368.297 m
125.641 368.812 l
120.672 368.812 l
120.724 369.562 120.951 370.130 121.352 370.516  c
121.753 370.901 122.307 371.094 123.016 371.094  c
123.432 371.094 123.836 371.044 124.227 370.945  c
124.617 370.846 125.005 370.693 125.391 370.484  c
125.391 371.516 l
124.995 371.672 124.594 371.794 124.188 371.883  c
123.781 371.971 123.370 372.016 122.953 372.016  c
121.911 372.016 121.083 371.711 120.469 371.102  c
119.854 370.492 119.547 369.667 119.547 368.625  c
119.547 367.552 119.839 366.701 120.422 366.070  c
121.005 365.440 121.786 365.125 122.766 365.125  c
123.651 365.125 124.352 365.409 124.867 365.977  c
125.383 366.544 125.641 367.318 125.641 368.297  c
h
124.562 367.969 m
124.552 367.385 124.385 366.917 124.062 366.562  c
123.740 366.208 123.312 366.031 122.781 366.031  c
122.177 366.031 121.695 366.203 121.336 366.547  c
120.977 366.891 120.771 367.370 120.719 367.984  c
124.562 367.969 l
h
132.859 367.875 m
132.859 371.844 l
131.781 371.844 l
131.781 367.922 l
131.781 367.297 131.659 366.831 131.414 366.523  c
131.169 366.216 130.807 366.062 130.328 366.062  c
129.745 366.062 129.284 366.247 128.945 366.617  c
128.607 366.987 128.438 367.495 128.438 368.141  c
128.438 371.844 l
127.359 371.844 l
127.359 365.281 l
128.438 365.281 l
128.438 366.297 l
128.698 365.901 129.003 365.607 129.352 365.414  c
129.701 365.221 130.104 365.125 130.562 365.125  c
131.312 365.125 131.883 365.357 132.273 365.820  c
132.664 366.284 132.859 366.969 132.859 367.875  c
h
139.328 366.281 m
139.328 362.719 l
140.406 362.719 l
140.406 371.844 l
139.328 371.844 l
139.328 370.859 l
139.099 371.245 138.812 371.534 138.469 371.727  c
138.125 371.919 137.708 372.016 137.219 372.016  c
136.427 372.016 135.781 371.698 135.281 371.062  c
134.781 370.427 134.531 369.594 134.531 368.562  c
134.531 367.531 134.781 366.701 135.281 366.070  c
135.781 365.440 136.427 365.125 137.219 365.125  c
137.708 365.125 138.125 365.219 138.469 365.406  c
138.812 365.594 139.099 365.885 139.328 366.281  c
h
135.656 368.562 m
135.656 369.354 135.818 369.977 136.141 370.430  c
136.464 370.883 136.911 371.109 137.484 371.109  c
138.057 371.109 138.508 370.883 138.836 370.430  c
139.164 369.977 139.328 369.354 139.328 368.562  c
139.328 367.771 139.164 367.151 138.836 366.703  c
138.508 366.255 138.057 366.031 137.484 366.031  c
136.911 366.031 136.464 366.255 136.141 366.703  c
135.818 367.151 135.656 367.771 135.656 368.562  c
h
f
2 J
10.0000 M
Q
q
0 J
1.45000 M
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [90.19999694824219 277.70001220703125 170.1999969482422 317.70001220703125]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9098039 0.93333334 0.96862745]
         /C1 [0.7176471 0.7882353 0.8901961]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
90.2000 277.700 m
170.200 277.700 l
170.200 317.700 l
90.2000 317.700 l
h
f
0.00000 0.00000 0.00000 RG
newpath
90.2000 277.700 m
170.200 277.700 l
170.200 317.700 l
90.2000 317.700 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
98.2500 296.281 m
98.1250 296.219 97.9922 296.169 97.8516 296.133  c
97.7109 296.096 97.5521 296.078 97.3750 296.078  c
96.7708 296.078 96.3047 296.276 95.9766 296.672  c
95.6484 297.068 95.4844 297.641 95.4844 298.391  c
95.4844 301.844 l
94.4062 301.844 l
94.4062 295.281 l
95.4844 295.281 l
95.4844 296.297 l
95.7135 295.901 96.0104 295.607 96.3750 295.414  c
96.7396 295.221 97.1823 295.125 97.7031 295.125  c
97.7760 295.125 97.8568 295.130 97.9453 295.141  c
98.0339 295.151 98.1302 295.167 98.2344 295.188  c
98.2500 296.281 l
h
105.000 298.297 m
105.000 298.812 l
100.031 298.812 l
100.083 299.562 100.310 300.130 100.711 300.516  c
101.112 300.901 101.667 301.094 102.375 301.094  c
102.792 301.094 103.195 301.044 103.586 300.945  c
103.977 300.846 104.365 300.693 104.750 300.484  c
104.750 301.516 l
104.354 301.672 103.953 301.794 103.547 301.883  c
103.141 301.971 102.729 302.016 102.312 302.016  c
101.271 302.016 100.443 301.711 99.8281 301.102  c
99.2135 300.492 98.9062 299.667 98.9062 298.625  c
98.9062 297.552 99.1979 296.701 99.7812 296.070  c
100.365 295.440 101.146 295.125 102.125 295.125  c
103.010 295.125 103.711 295.409 104.227 295.977  c
104.742 296.544 105.000 297.318 105.000 298.297  c
h
103.922 297.969 m
103.911 297.385 103.745 296.917 103.422 296.562  c
103.099 296.208 102.672 296.031 102.141 296.031  c
101.536 296.031 101.055 296.203 100.695 296.547  c
100.336 296.891 100.130 297.370 100.078 297.984  c
103.922 297.969 l
h
107.828 293.422 m
107.828 295.281 l
110.047 295.281 l
110.047 296.125 l
107.828 296.125 l
107.828 299.688 l
107.828 300.219 107.901 300.560 108.047 300.711  c
108.193 300.862 108.490 300.938 108.938 300.938  c
110.047 300.938 l
110.047 301.844 l
108.938 301.844 l
108.104 301.844 107.529 301.688 107.211 301.375  c
106.893 301.062 106.734 300.500 106.734 299.688  c
106.734 296.125 l
105.953 296.125 l
105.953 295.281 l
106.734 295.281 l
106.734 293.422 l
107.828 293.422 l
h
111.344 299.250 m
111.344 295.281 l
112.422 295.281 l
112.422 299.219 l
112.422 299.833 112.544 300.297 112.789 300.609  c
113.034 300.922 113.396 301.078 113.875 301.078  c
114.458 301.078 114.919 300.893 115.258 300.523  c
115.596 300.154 115.766 299.646 115.766 299.000  c
115.766 295.281 l
116.844 295.281 l
116.844 301.844 l
115.766 301.844 l
115.766 300.828 l
115.505 301.234 115.203 301.534 114.859 301.727  c
114.516 301.919 114.115 302.016 113.656 302.016  c
112.896 302.016 112.320 301.781 111.930 301.312  c
111.539 300.844 111.344 300.156 111.344 299.250  c
h
114.062 295.125 m
114.062 295.125 l
h
122.875 296.281 m
122.750 296.219 122.617 296.169 122.477 296.133  c
122.336 296.096 122.177 296.078 122.000 296.078  c
121.396 296.078 120.930 296.276 120.602 296.672  c
120.273 297.068 120.109 297.641 120.109 298.391  c
120.109 301.844 l
119.031 301.844 l
119.031 295.281 l
120.109 295.281 l
120.109 296.297 l
120.339 295.901 120.635 295.607 121.000 295.414  c
121.365 295.221 121.807 295.125 122.328 295.125  c
122.401 295.125 122.482 295.130 122.570 295.141  c
122.659 295.151 122.755 295.167 122.859 295.188  c
122.875 296.281 l
h
129.469 297.875 m
129.469 301.844 l
128.391 301.844 l
128.391 297.922 l
128.391 297.297 128.268 296.831 128.023 296.523  c
127.779 296.216 127.417 296.062 126.938 296.062  c
126.354 296.062 125.893 296.247 125.555 296.617  c
125.216 296.987 125.047 297.495 125.047 298.141  c
125.047 301.844 l
123.969 301.844 l
123.969 295.281 l
125.047 295.281 l
125.047 296.297 l
125.307 295.901 125.612 295.607 125.961 295.414  c
126.310 295.221 126.714 295.125 127.172 295.125  c
127.922 295.125 128.492 295.357 128.883 295.820  c
129.273 296.284 129.469 296.969 129.469 297.875  c
h
134.656 295.281 m
135.797 295.281 l
137.844 300.781 l
139.906 295.281 l
141.047 295.281 l
138.578 301.844 l
137.109 301.844 l
134.656 295.281 l
h
145.500 298.547 m
144.635 298.547 144.034 298.646 143.695 298.844  c
143.357 299.042 143.188 299.380 143.188 299.859  c
143.188 300.245 143.315 300.549 143.570 300.773  c
143.826 300.997 144.167 301.109 144.594 301.109  c
145.198 301.109 145.680 300.898 146.039 300.477  c
146.398 300.055 146.578 299.490 146.578 298.781  c
146.578 298.547 l
145.500 298.547 l
h
147.656 298.094 m
147.656 301.844 l
146.578 301.844 l
146.578 300.844 l
146.328 301.240 146.021 301.534 145.656 301.727  c
145.292 301.919 144.844 302.016 144.312 302.016  c
143.635 302.016 143.099 301.826 142.703 301.445  c
142.307 301.065 142.109 300.562 142.109 299.938  c
142.109 299.198 142.357 298.641 142.852 298.266  c
143.346 297.891 144.083 297.703 145.062 297.703  c
146.578 297.703 l
146.578 297.594 l
146.578 297.094 146.414 296.708 146.086 296.438  c
145.758 296.167 145.302 296.031 144.719 296.031  c
144.344 296.031 143.977 296.078 143.617 296.172  c
143.258 296.266 142.917 296.401 142.594 296.578  c
142.594 295.578 l
142.990 295.422 143.372 295.307 143.742 295.234  c
144.112 295.161 144.474 295.125 144.828 295.125  c
145.776 295.125 146.484 295.370 146.953 295.859  c
147.422 296.349 147.656 297.094 147.656 298.094  c
h
149.875 292.719 m
150.953 292.719 l
150.953 301.844 l
149.875 301.844 l
149.875 292.719 l
h
153.094 299.250 m
153.094 295.281 l
154.172 295.281 l
154.172 299.219 l
154.172 299.833 154.294 300.297 154.539 300.609  c
154.784 300.922 155.146 301.078 155.625 301.078  c
156.208 301.078 156.669 300.893 157.008 300.523  c
157.346 300.154 157.516 299.646 157.516 299.000  c
157.516 295.281 l
158.594 295.281 l
158.594 301.844 l
157.516 301.844 l
157.516 300.828 l
157.255 301.234 156.953 301.534 156.609 301.727  c
156.266 301.919 155.865 302.016 155.406 302.016  c
154.646 302.016 154.070 301.781 153.680 301.312  c
153.289 300.844 153.094 300.156 153.094 299.250  c
h
155.812 295.125 m
155.812 295.125 l
h
166.438 298.297 m
166.438 298.812 l
161.469 298.812 l
161.521 299.562 161.747 300.130 162.148 300.516  c
162.549 300.901 163.104 301.094 163.812 301.094  c
164.229 301.094 164.633 301.044 165.023 300.945  c
165.414 300.846 165.802 300.693 166.188 300.484  c
166.188 301.516 l
165.792 301.672 165.391 301.794 164.984 301.883  c
164.578 301.971 164.167 302.016 163.750 302.016  c
162.708 302.016 161.880 301.711 161.266 301.102  c
160.651 300.492 160.344 299.667 160.344 298.625  c
160.344 297.552 160.635 296.701 161.219 296.070  c
161.802 295.440 162.583 295.125 163.562 295.125  c
164.448 295.125 165.148 295.409 165.664 295.977  c
166.180 296.544 166.438 297.318 166.438 298.297  c
h
165.359 297.969 m
165.349 297.385 165.182 296.917 164.859 296.562  c
164.536 296.208 164.109 296.031 163.578 296.031  c
162.974 296.031 162.492 296.203 162.133 296.547  c
161.773 296.891 161.568 297.370 161.516 297.984  c
165.359 297.969 l
h
f
2 J
10.0000 M
Q
1.00000 1.00000 1.00000 RG
newpath
200.200 114.800 m
395.200 114.800 l
395.200 129.800 l
410.200 129.800 l
410.200 154.800 l
200.200 154.800 l
h
f
newpath
395.200 114.800 m
395.200 129.800 l
410.200 129.800 l
h
f*
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
200.200 114.800 m
395.200 114.800 l
395.200 129.800 l
410.200 129.800 l
410.200 154.800 l
200.200 154.800 l
h
S
newpath
395.200 114.800 m
395.200 129.800 l
410.200 129.800 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
220.859 131.375 m
219.250 135.719 l
222.469 135.719 l
220.859 131.375 l
h
220.188 130.203 m
221.531 130.203 l
224.859 138.953 l
223.625 138.953 l
222.828 136.703 l
218.891 136.703 l
218.094 138.953 l
216.844 138.953 l
220.188 130.203 l
h
230.047 133.500 m
237.562 133.500 l
237.562 134.484 l
230.047 134.484 l
230.047 133.500 l
h
230.047 135.891 m
237.562 135.891 l
237.562 136.891 l
230.047 136.891 l
230.047 135.891 l
h
250.391 130.875 m
250.391 132.125 l
249.984 131.750 249.557 131.471 249.109 131.289  c
248.661 131.107 248.182 131.016 247.672 131.016  c
246.672 131.016 245.906 131.323 245.375 131.938  c
244.844 132.552 244.578 133.438 244.578 134.594  c
244.578 135.740 244.844 136.620 245.375 137.234  c
245.906 137.849 246.672 138.156 247.672 138.156  c
248.182 138.156 248.661 138.062 249.109 137.875  c
249.557 137.688 249.984 137.411 250.391 137.047  c
250.391 138.281 l
249.974 138.562 249.534 138.773 249.070 138.914  c
248.607 139.055 248.120 139.125 247.609 139.125  c
246.276 139.125 245.229 138.719 244.469 137.906  c
243.708 137.094 243.328 135.990 243.328 134.594  c
243.328 133.188 243.708 132.078 244.469 131.266  c
245.229 130.453 246.276 130.047 247.609 130.047  c
248.130 130.047 248.622 130.117 249.086 130.258  c
249.549 130.398 249.984 130.604 250.391 130.875  c
h
254.703 133.141 m
254.130 133.141 253.674 133.367 253.336 133.820  c
252.997 134.273 252.828 134.891 252.828 135.672  c
252.828 136.464 252.995 137.083 253.328 137.531  c
253.661 137.979 254.120 138.203 254.703 138.203  c
255.276 138.203 255.732 137.977 256.070 137.523  c
256.409 137.070 256.578 136.453 256.578 135.672  c
256.578 134.901 256.409 134.286 256.070 133.828  c
255.732 133.370 255.276 133.141 254.703 133.141  c
h
254.703 132.234 m
255.641 132.234 256.378 132.539 256.914 133.148  c
257.451 133.758 257.719 134.599 257.719 135.672  c
257.719 136.745 257.451 137.589 256.914 138.203  c
256.378 138.818 255.641 139.125 254.703 139.125  c
253.766 139.125 253.029 138.818 252.492 138.203  c
251.956 137.589 251.688 136.745 251.688 135.672  c
251.688 134.599 251.956 133.758 252.492 133.148  c
253.029 132.539 253.766 132.234 254.703 132.234  c
h
264.969 134.984 m
264.969 138.953 l
263.891 138.953 l
263.891 135.031 l
263.891 134.406 263.768 133.940 263.523 133.633  c
263.279 133.326 262.917 133.172 262.438 133.172  c
261.854 133.172 261.393 133.357 261.055 133.727  c
260.716 134.096 260.547 134.604 260.547 135.250  c
260.547 138.953 l
259.469 138.953 l
259.469 132.391 l
260.547 132.391 l
260.547 133.406 l
260.807 133.010 261.112 132.716 261.461 132.523  c
261.810 132.331 262.214 132.234 262.672 132.234  c
263.422 132.234 263.992 132.466 264.383 132.930  c
264.773 133.393 264.969 134.078 264.969 134.984  c
h
270.422 129.828 m
270.422 130.734 l
269.391 130.734 l
269.005 130.734 268.737 130.812 268.586 130.969  c
268.435 131.125 268.359 131.406 268.359 131.812  c
268.359 132.391 l
270.141 132.391 l
270.141 133.234 l
268.359 133.234 l
268.359 138.953 l
267.281 138.953 l
267.281 133.234 l
266.250 133.234 l
266.250 132.391 l
267.281 132.391 l
267.281 131.938 l
267.281 131.208 267.451 130.674 267.789 130.336  c
268.128 129.997 268.667 129.828 269.406 129.828  c
270.422 129.828 l
h
271.328 132.391 m
272.406 132.391 l
272.406 138.953 l
271.328 138.953 l
271.328 132.391 l
h
271.328 129.828 m
272.406 129.828 l
272.406 131.203 l
271.328 131.203 l
271.328 129.828 l
h
278.984 135.594 m
278.984 134.812 278.823 134.208 278.500 133.781  c
278.177 133.354 277.724 133.141 277.141 133.141  c
276.568 133.141 276.120 133.354 275.797 133.781  c
275.474 134.208 275.312 134.812 275.312 135.594  c
275.312 136.375 275.474 136.979 275.797 137.406  c
276.120 137.833 276.568 138.047 277.141 138.047  c
277.724 138.047 278.177 137.833 278.500 137.406  c
278.823 136.979 278.984 136.375 278.984 135.594  c
h
280.062 138.141 m
280.062 139.255 279.815 140.086 279.320 140.633  c
278.826 141.180 278.062 141.453 277.031 141.453  c
276.656 141.453 276.299 141.424 275.961 141.367  c
275.622 141.310 275.297 141.224 274.984 141.109  c
274.984 140.062 l
275.297 140.229 275.609 140.354 275.922 140.438  c
276.234 140.521 276.547 140.562 276.859 140.562  c
277.568 140.562 278.099 140.378 278.453 140.008  c
278.807 139.638 278.984 139.078 278.984 138.328  c
278.984 137.797 l
278.755 138.182 278.469 138.471 278.125 138.664  c
277.781 138.857 277.365 138.953 276.875 138.953  c
276.073 138.953 275.424 138.646 274.930 138.031  c
274.435 137.417 274.188 136.604 274.188 135.594  c
274.188 134.583 274.435 133.771 274.930 133.156  c
275.424 132.542 276.073 132.234 276.875 132.234  c
277.365 132.234 277.781 132.331 278.125 132.523  c
278.469 132.716 278.755 133.005 278.984 133.391  c
278.984 132.391 l
280.062 132.391 l
280.062 138.141 l
h
282.328 130.203 m
283.516 130.203 l
283.516 133.797 l
287.812 133.797 l
287.812 130.203 l
289.000 130.203 l
289.000 138.953 l
287.812 138.953 l
287.812 134.781 l
283.516 134.781 l
283.516 138.953 l
282.328 138.953 l
282.328 130.203 l
h
294.281 135.656 m
293.417 135.656 292.815 135.755 292.477 135.953  c
292.138 136.151 291.969 136.490 291.969 136.969  c
291.969 137.354 292.096 137.659 292.352 137.883  c
292.607 138.107 292.948 138.219 293.375 138.219  c
293.979 138.219 294.461 138.008 294.820 137.586  c
295.180 137.164 295.359 136.599 295.359 135.891  c
295.359 135.656 l
294.281 135.656 l
h
296.438 135.203 m
296.438 138.953 l
295.359 138.953 l
295.359 137.953 l
295.109 138.349 294.802 138.643 294.438 138.836  c
294.073 139.029 293.625 139.125 293.094 139.125  c
292.417 139.125 291.880 138.935 291.484 138.555  c
291.089 138.174 290.891 137.672 290.891 137.047  c
290.891 136.307 291.138 135.750 291.633 135.375  c
292.128 135.000 292.865 134.812 293.844 134.812  c
295.359 134.812 l
295.359 134.703 l
295.359 134.203 295.195 133.818 294.867 133.547  c
294.539 133.276 294.083 133.141 293.500 133.141  c
293.125 133.141 292.758 133.188 292.398 133.281  c
292.039 133.375 291.698 133.510 291.375 133.688  c
291.375 132.688 l
291.771 132.531 292.154 132.417 292.523 132.344  c
292.893 132.271 293.255 132.234 293.609 132.234  c
294.557 132.234 295.266 132.479 295.734 132.969  c
296.203 133.458 296.438 134.203 296.438 135.203  c
h
304.125 134.984 m
304.125 138.953 l
303.047 138.953 l
303.047 135.031 l
303.047 134.406 302.924 133.940 302.680 133.633  c
302.435 133.326 302.073 133.172 301.594 133.172  c
301.010 133.172 300.549 133.357 300.211 133.727  c
299.872 134.096 299.703 134.604 299.703 135.250  c
299.703 138.953 l
298.625 138.953 l
298.625 132.391 l
299.703 132.391 l
299.703 133.406 l
299.964 133.010 300.268 132.716 300.617 132.523  c
300.966 132.331 301.370 132.234 301.828 132.234  c
302.578 132.234 303.148 132.466 303.539 132.930  c
303.930 133.393 304.125 134.078 304.125 134.984  c
h
310.594 133.391 m
310.594 129.828 l
311.672 129.828 l
311.672 138.953 l
310.594 138.953 l
310.594 137.969 l
310.365 138.354 310.078 138.643 309.734 138.836  c
309.391 139.029 308.974 139.125 308.484 139.125  c
307.693 139.125 307.047 138.807 306.547 138.172  c
306.047 137.536 305.797 136.703 305.797 135.672  c
305.797 134.641 306.047 133.810 306.547 133.180  c
307.047 132.549 307.693 132.234 308.484 132.234  c
308.974 132.234 309.391 132.328 309.734 132.516  c
310.078 132.703 310.365 132.995 310.594 133.391  c
h
306.922 135.672 m
306.922 136.464 307.083 137.086 307.406 137.539  c
307.729 137.992 308.177 138.219 308.750 138.219  c
309.323 138.219 309.773 137.992 310.102 137.539  c
310.430 137.086 310.594 136.464 310.594 135.672  c
310.594 134.880 310.430 134.260 310.102 133.812  c
309.773 133.365 309.323 133.141 308.750 133.141  c
308.177 133.141 307.729 133.365 307.406 133.812  c
307.083 134.260 306.922 134.880 306.922 135.672  c
h
313.875 129.828 m
314.953 129.828 l
314.953 138.953 l
313.875 138.953 l
313.875 129.828 l
h
322.828 135.406 m
322.828 135.922 l
317.859 135.922 l
317.911 136.672 318.138 137.240 318.539 137.625  c
318.940 138.010 319.495 138.203 320.203 138.203  c
320.620 138.203 321.023 138.154 321.414 138.055  c
321.805 137.956 322.193 137.802 322.578 137.594  c
322.578 138.625 l
322.182 138.781 321.781 138.904 321.375 138.992  c
320.969 139.081 320.557 139.125 320.141 139.125  c
319.099 139.125 318.271 138.820 317.656 138.211  c
317.042 137.602 316.734 136.776 316.734 135.734  c
316.734 134.661 317.026 133.810 317.609 133.180  c
318.193 132.549 318.974 132.234 319.953 132.234  c
320.839 132.234 321.539 132.518 322.055 133.086  c
322.570 133.654 322.828 134.427 322.828 135.406  c
h
321.750 135.078 m
321.740 134.495 321.573 134.026 321.250 133.672  c
320.927 133.318 320.500 133.141 319.969 133.141  c
319.365 133.141 318.883 133.312 318.523 133.656  c
318.164 134.000 317.958 134.479 317.906 135.094  c
321.750 135.078 l
h
328.406 133.391 m
328.281 133.328 328.148 133.279 328.008 133.242  c
327.867 133.206 327.708 133.188 327.531 133.188  c
326.927 133.188 326.461 133.385 326.133 133.781  c
325.805 134.177 325.641 134.750 325.641 135.500  c
325.641 138.953 l
324.562 138.953 l
324.562 132.391 l
325.641 132.391 l
325.641 133.406 l
325.870 133.010 326.167 132.716 326.531 132.523  c
326.896 132.331 327.339 132.234 327.859 132.234  c
327.932 132.234 328.013 132.240 328.102 132.250  c
328.190 132.260 328.286 132.276 328.391 132.297  c
328.406 133.391 l
h
334.391 137.969 m
334.391 141.453 l
333.312 141.453 l
333.312 132.391 l
334.391 132.391 l
334.391 133.391 l
334.620 132.995 334.906 132.703 335.250 132.516  c
335.594 132.328 336.005 132.234 336.484 132.234  c
337.286 132.234 337.938 132.549 338.438 133.180  c
338.938 133.810 339.188 134.641 339.188 135.672  c
339.188 136.703 338.938 137.536 338.438 138.172  c
337.938 138.807 337.286 139.125 336.484 139.125  c
336.005 139.125 335.594 139.029 335.250 138.836  c
334.906 138.643 334.620 138.354 334.391 137.969  c
h
338.062 135.672 m
338.062 134.880 337.898 134.260 337.570 133.812  c
337.242 133.365 336.797 133.141 336.234 133.141  c
335.661 133.141 335.211 133.365 334.883 133.812  c
334.555 134.260 334.391 134.880 334.391 135.672  c
334.391 136.464 334.555 137.086 334.883 137.539  c
335.211 137.992 335.661 138.219 336.234 138.219  c
336.797 138.219 337.242 137.992 337.570 137.539  c
337.898 137.086 338.062 136.464 338.062 135.672  c
h
344.766 133.391 m
344.641 133.328 344.508 133.279 344.367 133.242  c
344.227 133.206 344.068 133.188 343.891 133.188  c
343.286 133.188 342.820 133.385 342.492 133.781  c
342.164 134.177 342.000 134.750 342.000 135.500  c
342.000 138.953 l
340.922 138.953 l
340.922 132.391 l
342.000 132.391 l
342.000 133.406 l
342.229 133.010 342.526 132.716 342.891 132.523  c
343.255 132.331 343.698 132.234 344.219 132.234  c
344.292 132.234 344.372 132.240 344.461 132.250  c
344.549 132.260 344.646 132.276 344.750 132.297  c
344.766 133.391 l
h
348.438 133.141 m
347.865 133.141 347.409 133.367 347.070 133.820  c
346.732 134.273 346.562 134.891 346.562 135.672  c
346.562 136.464 346.729 137.083 347.062 137.531  c
347.396 137.979 347.854 138.203 348.438 138.203  c
349.010 138.203 349.466 137.977 349.805 137.523  c
350.143 137.070 350.312 136.453 350.312 135.672  c
350.312 134.901 350.143 134.286 349.805 133.828  c
349.466 133.370 349.010 133.141 348.438 133.141  c
h
348.438 132.234 m
349.375 132.234 350.112 132.539 350.648 133.148  c
351.185 133.758 351.453 134.599 351.453 135.672  c
351.453 136.745 351.185 137.589 350.648 138.203  c
350.112 138.818 349.375 139.125 348.438 139.125  c
347.500 139.125 346.763 138.818 346.227 138.203  c
345.690 137.589 345.422 136.745 345.422 135.672  c
345.422 134.599 345.690 133.758 346.227 133.148  c
346.763 132.539 347.500 132.234 348.438 132.234  c
h
357.969 132.641 m
357.969 133.656 l
357.656 133.479 357.349 133.349 357.047 133.266  c
356.745 133.182 356.438 133.141 356.125 133.141  c
355.417 133.141 354.870 133.362 354.484 133.805  c
354.099 134.247 353.906 134.870 353.906 135.672  c
353.906 136.474 354.099 137.096 354.484 137.539  c
354.870 137.982 355.417 138.203 356.125 138.203  c
356.438 138.203 356.745 138.161 357.047 138.078  c
357.349 137.995 357.656 137.870 357.969 137.703  c
357.969 138.703 l
357.667 138.839 357.354 138.943 357.031 139.016  c
356.708 139.089 356.365 139.125 356.000 139.125  c
355.010 139.125 354.224 138.815 353.641 138.195  c
353.057 137.576 352.766 136.734 352.766 135.672  c
352.766 134.609 353.060 133.771 353.648 133.156  c
354.237 132.542 355.047 132.234 356.078 132.234  c
356.401 132.234 356.721 132.268 357.039 132.336  c
357.357 132.404 357.667 132.505 357.969 132.641  c
h
365.453 135.406 m
365.453 135.922 l
360.484 135.922 l
360.536 136.672 360.763 137.240 361.164 137.625  c
361.565 138.010 362.120 138.203 362.828 138.203  c
363.245 138.203 363.648 138.154 364.039 138.055  c
364.430 137.956 364.818 137.802 365.203 137.594  c
365.203 138.625 l
364.807 138.781 364.406 138.904 364.000 138.992  c
363.594 139.081 363.182 139.125 362.766 139.125  c
361.724 139.125 360.896 138.820 360.281 138.211  c
359.667 137.602 359.359 136.776 359.359 135.734  c
359.359 134.661 359.651 133.810 360.234 133.180  c
360.818 132.549 361.599 132.234 362.578 132.234  c
363.464 132.234 364.164 132.518 364.680 133.086  c
365.195 133.654 365.453 134.427 365.453 135.406  c
h
364.375 135.078 m
364.365 134.495 364.198 134.026 363.875 133.672  c
363.552 133.318 363.125 133.141 362.594 133.141  c
361.990 133.141 361.508 133.312 361.148 133.656  c
360.789 134.000 360.583 134.479 360.531 135.094  c
364.375 135.078 l
h
371.547 133.391 m
371.547 129.828 l
372.625 129.828 l
372.625 138.953 l
371.547 138.953 l
371.547 137.969 l
371.318 138.354 371.031 138.643 370.688 138.836  c
370.344 139.029 369.927 139.125 369.438 139.125  c
368.646 139.125 368.000 138.807 367.500 138.172  c
367.000 137.536 366.750 136.703 366.750 135.672  c
366.750 134.641 367.000 133.810 367.500 133.180  c
368.000 132.549 368.646 132.234 369.438 132.234  c
369.927 132.234 370.344 132.328 370.688 132.516  c
371.031 132.703 371.318 132.995 371.547 133.391  c
h
367.875 135.672 m
367.875 136.464 368.036 137.086 368.359 137.539  c
368.682 137.992 369.130 138.219 369.703 138.219  c
370.276 138.219 370.727 137.992 371.055 137.539  c
371.383 137.086 371.547 136.464 371.547 135.672  c
371.547 134.880 371.383 134.260 371.055 133.812  c
370.727 133.365 370.276 133.141 369.703 133.141  c
369.130 133.141 368.682 133.365 368.359 133.812  c
368.036 134.260 367.875 134.880 367.875 135.672  c
h
374.719 136.359 m
374.719 132.391 l
375.797 132.391 l
375.797 136.328 l
375.797 136.943 375.919 137.406 376.164 137.719  c
376.409 138.031 376.771 138.188 377.250 138.188  c
377.833 138.188 378.294 138.003 378.633 137.633  c
378.971 137.263 379.141 136.755 379.141 136.109  c
379.141 132.391 l
380.219 132.391 l
380.219 138.953 l
379.141 138.953 l
379.141 137.938 l
378.880 138.344 378.578 138.643 378.234 138.836  c
377.891 139.029 377.490 139.125 377.031 139.125  c
376.271 139.125 375.695 138.891 375.305 138.422  c
374.914 137.953 374.719 137.266 374.719 136.359  c
h
377.438 132.234 m
377.438 132.234 l
h
386.250 133.391 m
386.125 133.328 385.992 133.279 385.852 133.242  c
385.711 133.206 385.552 133.188 385.375 133.188  c
384.771 133.188 384.305 133.385 383.977 133.781  c
383.648 134.177 383.484 134.750 383.484 135.500  c
383.484 138.953 l
382.406 138.953 l
382.406 132.391 l
383.484 132.391 l
383.484 133.406 l
383.714 133.010 384.010 132.716 384.375 132.523  c
384.740 132.331 385.182 132.234 385.703 132.234  c
385.776 132.234 385.857 132.240 385.945 132.250  c
386.034 132.260 386.130 132.276 386.234 132.297  c
386.250 133.391 l
h
393.000 135.406 m
393.000 135.922 l
388.031 135.922 l
388.083 136.672 388.310 137.240 388.711 137.625  c
389.112 138.010 389.667 138.203 390.375 138.203  c
390.792 138.203 391.195 138.154 391.586 138.055  c
391.977 137.956 392.365 137.802 392.750 137.594  c
392.750 138.625 l
392.354 138.781 391.953 138.904 391.547 138.992  c
391.141 139.081 390.729 139.125 390.312 139.125  c
389.271 139.125 388.443 138.820 387.828 138.211  c
387.214 137.602 386.906 136.776 386.906 135.734  c
386.906 134.661 387.198 133.810 387.781 133.180  c
388.365 132.549 389.146 132.234 390.125 132.234  c
391.010 132.234 391.711 132.518 392.227 133.086  c
392.742 133.654 393.000 134.427 393.000 135.406  c
h
391.922 135.078 m
391.911 134.495 391.745 134.026 391.422 133.672  c
391.099 133.318 390.672 133.141 390.141 133.141  c
389.536 133.141 389.055 133.312 388.695 133.656  c
388.336 134.000 388.130 134.479 388.078 135.094  c
391.922 135.078 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
249.692 220.200 m
230.480 220.200 l
194.199 220.386 l
194.099 220.388 l
S
newpath
186.100 220.550 m
198.199 225.306 l
195.098 220.368 l
197.996 215.308 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
130.200 154.769 m
130.200 195.781 l
S
newpath
130.200 203.781 m
135.200 191.781 l
130.200 194.781 l
125.200 191.781 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
130.200 240.223 m
130.200 269.690 l
S
newpath
130.200 277.690 m
135.200 265.690 l
130.200 268.690 l
125.200 265.690 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
130.200 317.695 m
130.200 339.727 l
S
newpath
130.200 347.727 m
135.200 335.727 l
130.200 338.727 l
125.200 335.727 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
